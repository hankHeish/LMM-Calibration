import numpy as np

forwards = np.array([0.0298658, 0.0366475, 0.0409215, 0.0443771, 0.0474538, 0.0497249, 0.0513826,
                     0.052244, 0.0529868, 0.0539636])

opt_tenor = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
swap_length = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

v_swptn_mkt = np.array([[25.2, 21.8, 19.1, 17.3, 15.9, 14.7, 13.9, 13.1, 12.8, 12.4],
                       [23.5, 20.1, 17.9, 16.3, 15, 14, 13.3, 12.5, 12.2, 11.8],
                       [21.4, 18.7, 16.8, 15.3, 14.2, 13.2, 12.6, 11.9, 11.7, 11.3],
                       [19.4, 17.4, 15.7, 14.4, 13.4, 12.6, 12, 11.4, 11.1, 10.8],
                       [18, 16.3, 14.7, 13.5, 12.7, 11.9, 11.4, 10.8, 10.6, 10.3],
                       [16.8, 15.3, 13.8, 13, 12.2, 11.6, 11.2, 10.6, 10.4, 10.1],
                       [15.9, 14.6, 13.4, 12.6, 12, 11.5, 11.1, 10.6, 10.4, 10.1],
                       [15.1, 14, 13, 12.4, 11.8, 11.3, 10.9, 10.4, 10.3, 10],
                       [14.5, 13.5, 12.8, 12.1, 11.6, 11.1, 10.8, 10.3, 10.2, 9.9],
                       [13.9, 13.2, 12.5, 11.9, 11.5, 11.1, 10.8, 10.3, 10.2, 9.9]]) / 100

# 10Y * 1Y, 9Y * 2Y, ..., 1Y * 10Y
co_terminal = np.array([13.9, 13.5, 13.0, 12.6, 12.2, 11.9, 12.0, 11.9, 12.2, 12.4]) / 100
upper_triangle = np.array([[25.2, 21.8, 19.1, 17.3, 15.9, 14.7, 13.9, 13.1, 12.8],
                          [23.5, 20.1, 17.9, 16.3, 15.0, 14.0, 13.3, 12.5, 0],
                          [21.4, 18.7, 16.8, 15.3, 14.2, 13.2, 12.6, 0, 0],
                          [19.4, 17.4, 15.7, 14.4, 13.4, 12.6, 0, 0, 0],
                          [18.0, 16.3, 14.7, 13.5, 12.7, 0, 0, 0, 0],
                          [16.8, 15.3, 13.8, 13, 0, 0, 0, 0, 0],
                          [15.9, 14.6, 13.4, 0, 0, 0, 0, 0, 0],
                          [15.1, 14.0, 0, 0, 0, 0, 0, 0, 0],
                          [14.5, 0, 0, 0, 0, 0, 0, 0, 0]]) / 100

tau = 1
M = len(forwards)

discount_factor = np.zeros(M)

for i in range(M):
    if i == 0:
        discount_factor[i] = 1 / (1 + tau * forwards[i])
    else:
        discount_factor[i] = discount_factor[i - 1] / (1 + tau * forwards[i])